---
description: 
globs: 
alwaysApply: false
---
# Wedding Project Development Rules

## Check MEMO folder for project status and tasks
Before implementing any changes or new features, always check `MEMO/wedding_extension_tasks.md` for:
- Current implementation status of features
- Task priorities and what needs to be completed
- Database changes required for deployment
- Development workflow guidelines

@MEMO/wedding_extension_tasks.md

## Branching Strategy
- All new features should be developed in feature branches
- Format: `feature/{feature-name}`
- Check current branches and their status before creating new ones
- After testing, create a PR to merge into main 

## Date Handling
- 必ずシステム時間を確認して正確な日付を使用する
- コミットログやドキュメントの日付はシステム日付と一致させる
- 日付フォーマットは「YYYY年MM月DD日」の形式に統一する
- Git記録（memo/git記録）に追加する際は特に注意する 

## GitHub操作の厳格ルール
- GitHubへのプッシュは絶対に指示がない限り行わないこと
- 常に新しいブランチで作業し、mainブランチには直接変更を加えないこと
- 変更をテストせずにマージやプッシュを行わないこと
- コードの変更前に必ず「新しいブランチを作成する」ことを最優先する
- ブランチ名は機能を明確に表す名前にすること（例：fix-mobile-ui, improve-form-validation）
- すべての変更は必ずユーザーの明示的な承認を得てから適用すること
- 緊急の場合でも、まずユーザーに確認を取ること

## コード変更の基本フロー
1. 新しいブランチを作成する
2. コードを変更・テストする
3. 変更内容をコミットする
4. ユーザーに変更内容を説明し承認を得る
5. ユーザーの明示的な指示があった場合のみ、GitHubにプッシュする

これらのルールに従わない場合、プロジェクトに重大な支障をきたす可能性があります。